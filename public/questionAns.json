[
    {
        "id": "1a",
        "question": "How does React Works",
        "answer": "ReactJS divides the UI into isolated reusable pieces of code known as components. React components work similarly to JavaScript functions as they accept arbitrary inputs called properties or props. It's possible to have as many components as necessary without cluttering your code."
    },
    {
        "id": "2b",
        "question": "Difference Between Props and State",
        "answer": "Props are used to pass data from one component to another. The state is a local data storage that is local to the component only and cannot be passed to other components. The this. setState property is used to update the state values in the component"
    },
    {
        "id": "3c",
        "question": "Uses of 'useEffect' and 'useState'",
        "answer": "The useState hook is used for storing variables that are part of your application's state and will change as the user interacts with your website. The useEffect hook allows components to react to lifecycle events such as mounting to the DOM, re-rendering, and unmounting."
    }
]